AWSTemplateFormatVersion: '2010-09-09'
Description: ECS Blue/Green deployment sample using cloudformation.
Parameters:
  VpcId:
    Type: 'AWS::EC2::VPC::Id'
  ASubnetId:
    Type: 'AWS::EC2::Subnet::Id'
  CSubnetId:
    Type: 'AWS::EC2::Subnet::Id'
  TaskDefinition:
    Type: String
    Default: "demo-app"
Transform:
  - 'AWS::CodeDeployBlueGreen'
Resources:
  ExampleSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security group for ec2 access
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
  ALBTargetGroupBlue:
    DependsOn: ExampleALB
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckIntervalSeconds: 5
      HealthCheckPath: /
      HealthCheckPort: '80'
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 2
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: '200'
      Port: 80
      Protocol: HTTP
      Tags:
        - Key: Group
          Value: Example
      TargetType: ip
      UnhealthyThresholdCount: 4
      VpcId: !Ref VpcId
      Name: 'bluetarget'
  ALBTargetGroupGreen:
    DependsOn: ExampleALB
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckIntervalSeconds: 5
      HealthCheckPath: /
      HealthCheckPort: '80'
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 2
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: '200'
      Port: 80
      Protocol: HTTP
      Tags:
        - Key: Group
          Value: Example
      TargetType: ip
      UnhealthyThresholdCount: 4
      VpcId: !Ref VpcId
      Name: 'greentarget'
  ExampleALB:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Scheme: internet-facing
      SecurityGroups:
        - !Ref ExampleSecurityGroup
      Subnets:
        - !Ref ASubnetId
        - !Ref CSubnetId
      Tags:
        - Key: Group
          Value: Example
      Type: application
      IpAddressType: ipv4
  ALBListener1Blue:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: forward
          ForwardConfig:
            TargetGroups:
              - TargetGroupArn: !Ref ALBTargetGroupBlue
                Weight: 1
      LoadBalancerArn: !Ref ExampleALB
      Port: 80
      Protocol: HTTP
  ECSDemoCluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterName: demo-cluster
  ECSDemoService:
    Type: 'AWS::ECS::Service'
    Properties:
      Cluster: !Ref ECSDemoCluster
      DesiredCount: 1
      DeploymentController:
        Type: EXTERNAL
      ServiceName: demo-service
      DeploymentController:
        Type: "CODE_DEPLOY"
      DesiredCount: 1
      HealthCheckGracePeriodSeconds: 60
      LaunchType: "FARGATE"
      LoadBalancers:
        - ContainerName: "demo-app"
          ContainerPort: 80
          TargetGroupArn: !Ref ALBTargetGroupBlue
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: "ENABLED"
          SecurityGroups:
            - !Ref ExampleSecurityGroup
          Subnets:
            - !Ref ASubnetId
            - !Ref CSubnetId
      SchedulingStrategy: "REPLICA"
      TaskDefinition: !Ref TaskDefinition